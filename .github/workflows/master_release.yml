name: TRex - Release Master

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - uses: actions/cache@v3
        with:
          key: build-workspace-${{ github.run_id }}
          path: |
            packages/shared/build
            packages/taboule/build
            platforms/yttrex/extension/build
            platforms/yttrex/extension/dist
            platforms/tktrex/extension/build
            platforms/tktrex/extension/dist
            platforms/guardoni/build
            platforms/guardoni/dist
            platforms/ycai/studio/build

      - name: Install dependencies
        run: yarn

      - name: Build
        env:
          NODE_ENV: production
        run: |
          yarn shared build
          yarn taboule build
          yarn yt:ext dist
          yarn yt:ext dist:guardoni
          yarn tk:ext dist
          yarn tk:ext dist:guardoni
          yarn guardoni build:cli
          yarn guardoni pkg
          yarn guardoni build:app
          yarn ycai build

  guardoni_build:
    name: Guardoni build
    needs: build
    runs-on: ${{ matrix.config.os }}
    strategy:
      max-parallel: 1
      matrix:
        node-version: [16.x]
        config:
          - os: ubuntu-latest
            command: 'dist:linux'
          - os: macos-latest
            command: 'dist:mac'
          - os: windows-latest
            command: 'dist:windows'
    steps:
      - name: 'Use GNU tar instead BSD tar'
        if: matrix.config.os == 'windows-latest'
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - uses: actions/cache@v3
        id: guardoni-cache
        with:
          key: build-guardoni-${{ github.run_id }}-${{ matrix.config.os }}
          restore-keys: |
            build-guardoni-${{ github.run_id }}-macos-latest
            build-guardoni-${{ github.run_id }}-ubuntu-latest
            build-workspace-${{ github.run_id }}
          path: |
            packages/shared/build
            packages/taboule/build
            platforms/yttrex/extension/dist
            platforms/tktrex/extension/dist
            platforms/guardoni/build
            platforms/guardoni/dist
            platforms/ycai/studio/build

      - name: Install dependencies
        run: yarn

      - name: Build Guardoni
        if: steps.guardoni-cache.outputs.cache-hit != 'true'
        env:
          NODE_ENV: production
        run: |
          yarn guardoni build:cli
          yarn guardoni build:app

      - name: Build Guardoni for ${{ matrix.config.os }}
        env:
          DOTENV_CONFIG_PATH: .env
        run: yarn guardoni ${{ matrix.config.command }}

  release:
    name: Release
    needs: guardoni_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          git config --global user.email "team@tracking.exposed"
          git config --global user.name "Team - Tracking Exposed"
          yarn release-it --ci

      # - name: Push image
      #   run: |
      #     IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$YT_IMAGE_NAME

      #     # Strip git ref prefix from version
      #     VERSION=$(yarn release-it --no-github.release --release-version)
      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #     # Use Docker `latest` tag convention
      #     [ "$VERSION" == "master" ] && VERSION=latest
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION
      #     docker tag $YT_IMAGE_NAME $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION

      - name: Build Dashboard
        env:
          DOTENV_CONFIG_PATH: .env
        run: yarn ycai build

      - name: Deploy YCAI Dashboard
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./platforms/ycai/studio/build/dashboard/
          remote_path: ~/studio-website/
          remote_host: ${{ secrets.YCAI_DEPLOY_HOST }}
          remote_user: ${{ secrets.YCAI_DEPLOY_USER }}
          remote_key: ${{ secrets.YCAI_DEPLOY_KEY }}
