name: Pull Request

on:
  pull_request:
    branches:
      - master

jobs:
  install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v2

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::~/.npm"

      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install modules
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: npm install --production=false

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}


  # lint:
  #   runs-on: ubuntu-latest
  #   needs: [install]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

  #     - name: Lint code
  #       run: npm run lint

  # build:
  #   runs-on: ubuntu-latest
  #   needs: [install]
  #   defaults:
  #     run:
  #       working-directory: ./backend
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

  #     - name: Build
  #       run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install mocha
        run: npm i -D mocha

      - name: Test
        run: npm test
