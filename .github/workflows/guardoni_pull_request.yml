name: Guardoni - Pull Request

on:
  pull_request:
    branches:
      - master
      - daily
      - beta
      - feat/**
      - fix/**
      - refactor/**
    paths:
      - 'packages/shared/**'
      - 'platforms/**'

jobs:
  pull_request:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    services:
      mongo-db:
        image: mongo:4.2
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install modules
        run: yarn

      - name: Get version
        id: version
        run: |
          echo "::set-output name=version::$(npm pkg get version | sed 's/"//g')"

      - name: Lint code
        run: yarn guardoni lint

      - name: Build shared
        run: yarn shared build

      - name: Build guardoni
        run: yarn guardoni tsc -b

      - name: Start PM2
        run: |
          yarn clean
          yarn pm2 start --env test ./platforms/ecosystem.config.js

      - name: Build extensions
        env:
          DOTENV_CONFIG_PATH: .env.development
        run: |
          yarn yt:ext build:guardoni
          yarn tk:ext build:guardoni

      - name: Test Guardoni
        run: |
          yarn test guardoni --ci
          yarn pm2 stop all

  guardoni_build:
    name: Guardoni build
    runs-on: ${{ matrix.config.os }}
    strategy:
      max-parallel: 1
      matrix:
        node-version: [16.x]
        config:
          - os: ubuntu-latest
            command: 'dist:linux'
          # - os: macos-latest
          #   command: 'dist:mac'
          # - os: windows-latest
          #   command: 'dist:windows'
    services:
      mongo-db:
        image: mongo:4.2
        ports:
          - 27017:27017
    steps:
      # configure docker when os is macos
      - uses: docker-practice/actions-setup-docker@master
        if: ${{ matrix.config.os == 'macos-latest' }}

      - name: 'Use GNU tar instead BSD tar'
        if: matrix.config.os == 'windows-latest'
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - uses: actions/cache@v2
        with:
          key: build-guardoni-${{ github.run_id }}-${{ matrix.config.os }}
          restore-keys: |
            build-guardoni-${{ github.run_id }}-macos-latest
            build-guardoni-${{ github.run_id }}-ubuntu-latest
            build-workspace-${{ github.run_id }}
          path: |
            packages/shared/build
            packages/taboule/build
            platforms/yttrex/extension/dist
            platforms/tktrex/extension/dist
            platforms/guardoni/build
            platforms/guardoni/dist
            platforms/ycai/studio/build

      - name: Install dependencies
        run: yarn

      - name: Start PM2
        run: |
          yarn pm2 start --env test ./platforms/ecosystem.config.js
          sleep 5

      - name: Build Guardoni for ${{ matrix.config.os }}
        working-directory: ./platforms/guardoni
        run: ./scripts/cli-build.mjs

      # - name: Test CLI - YT Home
      #   run: yarn guardoni cli-yt-test-home

      # - name: Test CLI - YT Videos
      #   run: yarn guardoni cli-yt-test-videos

      - name: Stop PM2
        run: yarn pm2 stop all
