name: Guardoni - Pull Request

on:
  pull_request:
    branches:
      - master
      - daily
      - beta
      - feat/**
      - fix/**
      - refactor/**
    paths:
      - "packages/shared/**"
      - "platforms/**/extension/**"
      - "platforms/guardoni/**"

jobs:
  pull_request:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    services:
      mongo-db:
        image: mongo:4.2
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: yarn.lock

      - name: Install modules
        run: yarn

      - name: Get version
        id: version
        run: |
          echo "::set-output name=version::$(npm pkg get version | sed 's/"//g')"

      - name: Lint code
        run: yarn guardoni lint

      - name: Build shared
        run: yarn shared build

      - name: Build guardoni
        env:
          NODE_ENV: production
        run: |
          yarn yt:ext build
          yarn yt:ext dist:guardoni
          mkdir -p ~/.guardoni/extension
          cp ./platforms/yttrex/extension/dist/*.zip ~/.guardoni/extension
          yarn guardoni build

      - name: Test
        run: |
          yarn pm2 start --env test platforms/yttrex/backend/ecosystem.config.js
          yarn test guardoni --ci
          yarn pm2 stop all

      - name: Package
        run: yarn guardoni pkg

      - name: Test package
        run: ./platforms/guardoni/dist/guardoni-cli-${{ steps.version.outputs.version }}-linux yt-list
